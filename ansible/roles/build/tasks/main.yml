---
- name: "install docker-compose"
  remote_user: root
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - 'docker-compose'

- name: "mkdir build directory"
  remote_user: "{{ fabric.user }}"
  file:
    path: "/home/{{ fabric.user }}/build"
    owner: "{{ fabric.user }}"
    group: "{{ fabric.user }}"
    state: directory

- name: "mkdir ~/golang/src/localhost"
  remote_user: "{{ fabric.user }}"
  file:
    path: "/home/{{ fabric.user }}/golang/src/localhost"
    owner: "{{ fabric.user }}"
    group: "{{ fabric.user }}"
    state: directory

- name: "copy fabric build script"
  remote_user: "{{ fabric.user }}"
  template:
    src: "../files/build.sh"
    dest: "/home/{{ fabric.user }}/build"
    owner: "{{ fabric.user }}"
    group: "{{ fabric.user }}"
    mode: 0755

- name: "copy fabric network artifact creation script"
  remote_user: "{{ fabric.user }}"
  copy:
    src: ../files/generate
    dest: "/home/{{ fabric.user }}/build"

- name: "copy invoke src"
  remote_user: "{{ fabric.user }}"
  copy:
    src: ../files/invoke
    dest: "/home/{{ fabric.user }}/golang/src/localhost"

- name: "fetch and build fabric peer, orderer, cryptogen, configtxgen"
  remote_user: "{{ fabric.user }}"
  command: "/home/{{ fabric.user }}/build/build.sh"
